#
# wm independent hotkeys
#

# power operations
super + End ; {s,S,alt + s,r,p}
	loginctl {suspend,hibernate,hybrid-sleep,reboot,poweroff}

super + End ; b
	xset dpms force off

# rofi
super + shift + {End,Insert,Return}
	exec {rofi-powermenu,rofi-bspwm-unhide,rofi -modi emoji -show emoji}

super + shift + space
	exec rofi -modi calc -show calc

super + space
	exec rofi -show drun

alt + Tab
	rofi-windowswitcher

# applications
super + Return
	exec kitty -1

super + shift + {m,v}
	exec {mpv "$(xclip -sel c -o)",pavucontrol-qt}

super + shift + {n,p}
	exec kitty -1 --class=kittyfloat -o initial_window_width=900 -o initial_window_height=900 \
		{ncmpcpp,htop}

super + Insert
	carpalx-helper

{_,ctrl} + Print
	screenshot {-s -u,-u}

super + {_,shift + }Print
	exec {peek -t, peek}

{shift,shift + alt,ctrl,ctrl + alt,alt} + Home
	dunstctl {close,close-all,history-pop,context,action 0}


#
# bspwm hotkeys
#

# close and kill
super + {_,shift + }w
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# if current node is automatic, send it to the last manual, otherwise pull the last leaf
super + y
	bspc query -N -n focused.automatic && bspc node -n last.!automatic || bspc node last.leaf -n focused

# swap the current node and the biggest local window
super + g
	bspc node -s biggest.local.window

# toggle pointer focus
super + alt + p
	bspc config focus_follows_pointer {true,false}

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {w,x,y,z}
	bspc node -g {hidden,locked,sticky,private}

super + ctrl + shift + w
	bspc node $(bspc query -N -d focused -n .hidden | tail -1) -g hidden=off

#
# focus/swap
#

super {_,+ shift} + r
	bspc node @/ -R {90,270}

# rotate leaves of tree
super + shift + {comma,period}
	bspc desktop -R {90,270}

# focus/swap the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local.!local.window

# focus the next/previous desktop
super + bracket{left,right}
	bspc desktop -f {prev,next}

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus/send to the given desktop
{_,shift + }{super,mode_switch} + {1-9,0}
	bspc {desktop -f,node -d} {DisplayPort,HDMI-A}-3:'^{1-9,10}'

# focus/send to another monitor
super + minus
	bspc monitor -f last

super + underscore
	bspc node -m last --follow

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

#
# move/resize
#

# expand the tiled space in the given direction
super + alt + {h,j,k,l}
	bspc node {@west -r -,@south -r +,@north -r -,@east -r +}10

# contract the tiled space in the given direction
super + alt + shift + {h,j,k,l}
	bspc node {@east -r -,@north -r +,@south -r -,@west -r +}10

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0, 0 20, 0 -20,20 0}
